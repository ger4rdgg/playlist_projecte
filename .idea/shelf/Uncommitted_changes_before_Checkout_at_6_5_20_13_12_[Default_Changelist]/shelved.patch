Index: .travis.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>language: python\npython:\n- '3.7'\ninstall:\n- pip install -r requirements.txt\nscript:\n- python manage.py test\ndeploy:\n  provider: heroku\n  api_key:\n    secure: ppwqf1Vk7irinMkW1AJFK/bzVLC6JuOEKKkFhL2DSNzo+wJX1DyNLmc6DcDCDX0n6QGlhPlY4Q3WY4ijesAVyDrPXZRZOKZTwfwPERVCH3kn7sVTMGaemC5pQj04nkrGuvBc3WB3xHEQ3c+IO9lCNvGvZDp6usPbjFimaA63OX1wER2DuR3wVdGG2g+TQaVHYaCPzz5rMjIdv88pCn+SB7KB6HAbE/xf3/WEXF1SWl5/fJid3ZXBuTlWF+WxvJ/DDL5rm0XxPeuVPU8bL66U30pJTSWQqwswaDb1GxHFPApKSOH6bZyx0zaQK82vUwL8hABdtY75iM/2Y++n54XKMInWFj6xX+TXAoDjYRMmQ8ns54LAJfuPF8WnTuDc4vwE/y5+B2zTU4FZeS1SZlmjpoTcpPEmSWQpc04rBHyKBQ1Cjvhe+PRDx0PVKGGG05sDr+VWXjSIO8nQcS41qqa171qln7P7Rr2tSZQ8Zy3RxOKdr64+V8J8v1s5cT9ryEM5o6Bl8z6UyEDTIUU6TAWOMvOdUFPf3NmeLvTdwEWsJGOfC5OBpumN0tJYUdqZQuaMfWd6vbm/lFOvBj/P/TuIGAP+ZYnHSDTehXmY8EMN214MiIuXsERz2L77tmcKsNlQkjU//0R/TLAKw1gbAM+jxqR16v59KcZmbaCKgudtvso=\napp: playlist-web-project\ntrue:\n  repo: ger4rdgg/playlist_projecte\n  branch: master\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .travis.yml	(revision ee1fbc072f12d1c4d632ae277447d6149b03321b)
+++ .travis.yml	(date 1588674317911)
@@ -5,6 +5,7 @@
 - pip install -r requirements.txt
 script:
 - python manage.py test
+- python manage.py behave
 deploy:
   provider: heroku
   api_key:
Index: playlist_projecte/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for playlist_projecte project.\n\nGenerated by 'django-admin startproject' using Django 3.0.4.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/3.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/3.0/ref/settings/\n\"\"\"\n\nimport os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '%$4_5@2$%*0%2%93qu^w^)(tcj4v35qf0$y#+gvvlczae1t!o_'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['playlist-web-project.herokuapp.com', '127.0.0.1']\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'social_django',\n    'playlist_app'\n\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nAUTHENTICATION_BACKENDS = (\n    'social_core.backends.google.GoogleOAuth2',\n)\n\nSOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '818288473621-0m3qt1okrljlusj64qmpva1c2l7atikl.apps.googleusercontent.com'\n\nSOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '-dTmktQLSr_CCIx7XDhxV6Bq'\n\n\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'\n\nSOCIAL_AUTH_URL_NAMESPACE = 'social'\n\nROOT_URLCONF = 'playlist_projecte.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')]\n        ,\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'playlist_projecte.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- playlist_projecte/settings.py	(revision ee1fbc072f12d1c4d632ae277447d6149b03321b)
+++ playlist_projecte/settings.py	(date 1588674398894)
@@ -38,7 +38,8 @@
     'django.contrib.messages',
     'django.contrib.staticfiles',
     'social_django',
-    'playlist_app'
+    'playlist_app',
+    'behave_django',
 
 ]
 
Index: features/environment.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\nimport django\nfrom behave.runner import Context\nfrom django.contrib.staticfiles.testing import StaticLiveServerTestCase\nfrom django.core.management import call_command\nfrom django.shortcuts import resolve_url\nfrom django.test.runner import DiscoverRunner\nfrom splinter.browser import Browser\n\nos.environ[\"DJANGO_SETTINGS_MODULE\"] = \"playlist_projecte.settings\"\n\nclass ExtendedContext(Context):\n    def get_url(self, to=None, *args, **kwargs):\n        return self.test.live_server_url + (\n            resolve_url(to, *args, **kwargs) if to else '')\n\ndef before_all(context):\n    django.setup()\n    context.test_runner = DiscoverRunner()\n    context.test_runner.setup_test_environment()\n    context.browser = Browser('chrome', headless=True)\n\ndef before_scenario(context, scenario):\n    context.test_runner.setup_databases()\n    object.__setattr__(context, '__class__', ExtendedContext)\n    context.test = StaticLiveServerTestCase\n    context.test.setUpClass()\n\ndef after_scenario(context, scenario):\n    context.test.tearDownClass()\n    del context.test\n    call_command('flush', verbosity=0, interactive=False)\n\ndef after_all(context):\n    context.test_runner.teardown_test_environment()\n    context.browser.quit()\n    context.browser = None
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- features/environment.py	(revision ee1fbc072f12d1c4d632ae277447d6149b03321b)
+++ features/environment.py	(date 1588674439400)
@@ -1,37 +1,8 @@
-import os
-import django
-from behave.runner import Context
-from django.contrib.staticfiles.testing import StaticLiveServerTestCase
-from django.core.management import call_command
-from django.shortcuts import resolve_url
-from django.test.runner import DiscoverRunner
 from splinter.browser import Browser
 
-os.environ["DJANGO_SETTINGS_MODULE"] = "playlist_projecte.settings"
-
-class ExtendedContext(Context):
-    def get_url(self, to=None, *args, **kwargs):
-        return self.test.live_server_url + (
-            resolve_url(to, *args, **kwargs) if to else '')
-
 def before_all(context):
-    django.setup()
-    context.test_runner = DiscoverRunner()
-    context.test_runner.setup_test_environment()
     context.browser = Browser('chrome', headless=True)
 
-def before_scenario(context, scenario):
-    context.test_runner.setup_databases()
-    object.__setattr__(context, '__class__', ExtendedContext)
-    context.test = StaticLiveServerTestCase
-    context.test.setUpClass()
-
-def after_scenario(context, scenario):
-    context.test.tearDownClass()
-    del context.test
-    call_command('flush', verbosity=0, interactive=False)
-
 def after_all(context):
-    context.test_runner.teardown_test_environment()
     context.browser.quit()
     context.browser = None
\ No newline at end of file
